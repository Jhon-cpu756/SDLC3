
name: Security CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Ex√©cution quotidienne √† minuit

jobs:
  # üì¶ Installation des d√©pendances
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Backend Dependencies
        working-directory: ./api
        run: npm install

      - name: Install Frontend Dependencies
        working-directory: ./front-office/money-count
        run: npm install

  # üîç Analyse de s√©curit√© avec Snyk
  security-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Snyk
        run: npm install -g snyk

      - name: Run Snyk Security Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --all-projects || true  # Continue m√™me si des vuln√©rabilit√©s sont trouv√©es

      - name: Monitor vulnerabilities with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor || true  # Enregistre les vuln√©rabilit√©s d√©tect√©es

  # üîî Notification Slack si des vuln√©rabilit√©s sont d√©tect√©es
  notify-team:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "üö® Snyk a d√©tect√© des vuln√©rabilit√©s dans le projet. Consultez le rapport ici: https://app.snyk.io"

  # üìä Mettre √† jour le Dashboard Grafana
  update-dashboard:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Send data to Grafana
        run: |
          curl -X POST "http://grafana-instance/api/dashboards/db" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.GRAFANA_API_KEY }}" \
          --data @snyk-results.json
          
