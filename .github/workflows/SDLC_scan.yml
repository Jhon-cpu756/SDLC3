name: Snyk Security with Monitoring and Alerts

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: '0 10 * * *' # ExÃ©cution quotidienne Ã  10h du matin

permissions:
  contents: read

jobs:
  snyk-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: VÃ©rifier la structure des fichiers
        run: ls -R

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Validate JSON files
        run: |
          for file in $(find . -name "*.json"); do
            echo "Validating $file"
            jq . $file > /dev/null || exit 1
          done

      - name: Run Snyk Code Security Scan
        run: snyk code test --sarif > snyk-code.sarif || true

      - name: Run Snyk Open Source Scan
        working-directory: ./api
        run: snyk monitor --all-projects || true

      - name: Run Snyk Open Source Scan (Frontend)
        working-directory: ./front-office/money-count
        run: snyk monitor --all-projects || true

      - name: Run Snyk Infrastructure-as-Code (IaC) Scan
        working-directory: ./api
        run: snyk iac test --report || true

      - name: Run Snyk Infrastructure-as-Code (IaC) Scan (Frontend)
        working-directory: ./front-office/money-count
        run: snyk iac test --report || true

      - name: Run Snyk Container Security Scan
        run: snyk container monitor your/image-to-test --file=Dockerfile || true

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images
        run: |
          docker build -t my-app-backend:latest ./api
          docker build -t my-app-frontend:latest ./front-office/money-count

      - name: Run Trivy Container Scan (Backend)
        run: trivy image --severity HIGH,CRITICAL my-app-backend:latest

      - name: Run Trivy Container Scan (Frontend)
        run: trivy image --severity HIGH,CRITICAL my-app-frontend:latest

      - name: Upload Snyk results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

      - name: Send Security Alert to Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: 'Snyk Security Bot'
          SLACK_ICON_EMOJI: ':warning:'
          SLACK_MESSAGE: "Snyk & Trivy Security Scans completed. Check results in GitHub Security Tab."

      - name: Update Vulnerability Dashboard
        run: |
          curl -X POST -H "Content-Type: application/json" \
               -d '{"event":"security_scan","status":"completed"}' \
               ${{ secrets.GRAFANA_WEBHOOK_URL }}

  build-app:
    runs-on: ubuntu-latest
    needs: snyk-security-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: VÃ©rifier le rÃ©pertoire courant
        run: pwd && ls -R

      - name: Fix Repository Path
        run: cd SDLC3 && mv * ../ && cd .. && rm -rf SDLC3 || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # ðŸ“¦ Installer les dÃ©pendances Backend
      - name: Install Backend Dependencies
        working-directory: ./api
        run: npm install

      # ðŸ“¦ Installer les dÃ©pendances Frontend
      - name: Install Frontend Dependencies
        working-directory: ./front-office/money-count
        run: npm install

      # ðŸš€ Build du Backend
      - name: Build Backend
        working-directory: ./api
        run: npm start &

      # ðŸš€ Build du Frontend
      - name: Build Frontend
        working-directory: ./front-office/money-count
        run: npm run build
